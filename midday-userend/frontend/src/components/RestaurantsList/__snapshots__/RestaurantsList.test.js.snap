// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Given a component RestaurantsList When has inputValue.length  Then it should render filteredRestaurants 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "marginTop": 50,
      "paddingLeft": 20,
      "paddingRight": 20,
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "paddingLeft": 20,
        "paddingRight": 20,
        "width": "100%",
      }
    }
  >
    <TextInput
      allowFontScaling={true}
      onChangeText={[Function]}
      placeholder="A qué restaurante te apetece ir hoy?"
      rejectResponderTermination={true}
      style={
        Object {
          "backgroundColor": "rgb(135, 175, 147)",
          "borderRadius": 10,
          "height": 60,
          "justifyContent": "center",
          "marginBottom": 20,
          "paddingLeft": 40,
          "width": "100%",
        }
      }
      testID="searchbar"
      underlineColorAndroid="transparent"
      value="asiatica"
    />
    <Icon
      name="search-outline"
      style={
        Object {
          "color": "black",
          "fontSize": 25,
          "left": "10%",
          "position": "absolute",
          "top": "20%",
        }
      }
    />
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "name": "hi",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "flexDirection": "column",
        "width": "90%",
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "borderColor": "black",
              "borderRadius": 15,
              "borderWidth": 1,
              "height": 150,
              "marginBottom": 15,
              "overflow": "hidden",
              "position": "relative",
              "width": "100%",
            }
          }
        >
          <View
            accessibilityIgnoresInvertColors={true}
            style={
              Object {
                "height": "100%",
                "position": "absolute",
                "top": 0,
                "width": "100%",
              }
            }
          >
            <Image
              source={
                Object {
                  "uri": undefined,
                }
              }
              style={
                Array [
                  Object {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "height": "100%",
                    "width": "100%",
                  },
                  undefined,
                ]
              }
            />
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "height": 150,
                  "opacity": 1,
                  "width": "100%",
                }
              }
              testID="hi"
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "rgba(242, 242, 242, 0.8)",
                    "borderBottomLeftRadius": 15,
                    "borderBottomRightRadius": 15,
                    "flexDirection": "row",
                    "height": 60,
                    "justifyContent": "space-between",
                    "padding": 20,
                    "position": "absolute",
                    "top": 90,
                    "width": "100%",
                  }
                }
              >
                <Text>
                  hi
                </Text>
                <Text>
                  undefined, undefined
                </Text>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "rgb(135, 175, 147)",
                      "borderRadius": 50,
                      "height": 40,
                      "justifyContent": "center",
                      "width": 40,
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "black",
                        "fontSize": 12,
                      }
                    }
                  >
                     €
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`Given a component RestaurantsList When invoked Then it should render correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "marginTop": 50,
      "paddingLeft": 20,
      "paddingRight": 20,
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "paddingLeft": 20,
        "paddingRight": 20,
        "width": "100%",
      }
    }
  >
    <TextInput
      allowFontScaling={true}
      onChangeText={[Function]}
      placeholder="A qué restaurante te apetece ir hoy?"
      rejectResponderTermination={true}
      style={
        Object {
          "backgroundColor": "rgb(135, 175, 147)",
          "borderRadius": 10,
          "height": 60,
          "justifyContent": "center",
          "marginBottom": 20,
          "paddingLeft": 40,
          "width": "100%",
        }
      }
      testID="searchbar"
      underlineColorAndroid="transparent"
      value=""
    />
    <Icon
      name="search-outline"
      style={
        Object {
          "color": "black",
          "fontSize": 25,
          "left": "10%",
          "position": "absolute",
          "top": "20%",
        }
      }
    />
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "name": "asian",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "flexDirection": "column",
        "width": "90%",
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "borderColor": "black",
              "borderRadius": 15,
              "borderWidth": 1,
              "height": 150,
              "marginBottom": 15,
              "overflow": "hidden",
              "position": "relative",
              "width": "100%",
            }
          }
        >
          <View
            accessibilityIgnoresInvertColors={true}
            style={
              Object {
                "height": "100%",
                "position": "absolute",
                "top": 0,
                "width": "100%",
              }
            }
          >
            <Image
              source={
                Object {
                  "uri": undefined,
                }
              }
              style={
                Array [
                  Object {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "height": "100%",
                    "width": "100%",
                  },
                  undefined,
                ]
              }
            />
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "height": 150,
                  "opacity": 1,
                  "width": "100%",
                }
              }
              testID="asian"
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "rgba(242, 242, 242, 0.8)",
                    "borderBottomLeftRadius": 15,
                    "borderBottomRightRadius": 15,
                    "flexDirection": "row",
                    "height": 60,
                    "justifyContent": "space-between",
                    "padding": 20,
                    "position": "absolute",
                    "top": 90,
                    "width": "100%",
                  }
                }
              >
                <Text>
                  asian
                </Text>
                <Text>
                  undefined, undefined
                </Text>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "rgb(135, 175, 147)",
                      "borderRadius": 50,
                      "height": 40,
                      "justifyContent": "center",
                      "width": 40,
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "black",
                        "fontSize": 12,
                      }
                    }
                  >
                     €
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
