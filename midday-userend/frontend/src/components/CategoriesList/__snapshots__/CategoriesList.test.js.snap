// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Given a CategoriesList component Renders correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "marginTop": 100,
      "paddingLeft": 20,
      "paddingRight": 20,
      "width": "100%",
    }
  }
>
  <TextInput
    allowFontScaling={true}
    onChangeText={[Function]}
    placeholder="Tipo de menú o restaurante"
    rejectResponderTermination={true}
    style={
      Object {
        "backgroundColor": "rgb(135, 175, 147)",
        "borderRadius": 10,
        "height": 60,
        "justifyContent": "center",
        "marginBottom": 20,
        "paddingLeft": 60,
        "width": "100%",
      }
    }
    underlineColorAndroid="transparent"
    value=""
  />
  <Icon
    name="search-outline"
    style={
      Object {
        "color": "black",
        "fontSize": 25,
        "left": "8%",
        "position": "absolute",
        "top": "2%",
      }
    }
  />
  <Text
    style={
      Object {
        "fontSize": 20,
        "fontWeight": "700",
        "marginBottom": 25,
      }
    }
  >
    ¿Qué Menú te apetece hoy?
  </Text>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "flex": 1,
        "width": "100%",
      }
    }
  >
    <RCTScrollView
      data={
        Array [
          Object {
            "name": "asian",
          },
        ]
      }
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      style={
        Object {
          "flexDirection": "column",
        }
      }
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                Object {
                  "justifyContent": "space-between",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "borderColor": "black",
                  "borderRadius": 15,
                  "borderWidth": 1,
                  "height": 150,
                  "marginBottom": 15,
                  "overflow": "hidden",
                  "width": "48%",
                }
              }
            >
              <View
                accessibilityIgnoresInvertColors={true}
                style={
                  Object {
                    "height": "100%",
                    "position": "absolute",
                    "top": 0,
                    "width": "100%",
                  }
                }
              >
                <Image
                  source={
                    Object {
                      "uri": undefined,
                    }
                  }
                  style={
                    Array [
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "height": "100%",
                        "width": "100%",
                      },
                      undefined,
                    ]
                  }
                />
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "rgba(242, 242, 242, 0.8)",
                      "borderTopLeftRadius": 15,
                      "borderTopRightRadius": 15,
                      "height": 40,
                      "justifyContent": "center",
                      "width": "100%",
                    }
                  }
                >
                  <Text>
                    asian
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </RCTSafeAreaView>
</View>
`;
